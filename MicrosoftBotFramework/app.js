'use strict';
var debug = require('debug');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');
var restify = require('restify');
var builder = require('botbuilder');
var apiairecognizer = require('api-ai-recognizer');
var http = require('http');
var request = require('request');
var AdaptiveCards = require('microsoft-adaptivecards');
const FO_URL = 'https://drive.intermarche.com/';
const URL_MCO = process.env.URL_MCO;
const URL_RC = process.env.URL_RC;
const MSQ_JETON_APP_RC = process.env.MSQ_JETON_APP_RC;
const MSQ_APP_RC = process.env.MSQ_APP_RC;
var server = restify.createServer();
var app = express();
const MICROSOFT_APP_ID = process.env.MICROSOFT_APP_ID; 
const MICROSOFT_APP_PASSWORD = process.env.MICROSOFT_APP_PASSWORD;
const LUIS_APP_URL = process.env.LUIS_APP_URL;

//Setup server restify
server.listen(process.env.port || process.env.PORT || 3978, function () {
    console.log('%s listening to %s', server.name, server.url);
});

//Creation chat connector pour communiquer avec le serve bot framework
var connector = new builder.ChatConnector({
    appId: MICROSOFT_APP_ID,
    appPassword: MICROSOFT_APP_PASSWORD
});


//listen messages utlisateurs
server.post('/api/messages', connector.listen());


//Reception message utilisateur
var bot = new builder.UniversalBot(connector, function (session) {
    session.send("SALUT SALUT");
});


//Ajout reconnaissance LUIS
var recognizer = new builder.LuisRecognizer(LUIS_APP_URL);
bot.recognizer(recognizer);

//ajout reconaissance api.ai(dialogflow)
//var recognizer = new apiairecognizer("30dfeddc13344176b6cefa6c09056e73");

//var intents = new builder.IntentDialog({
//    recognizers: [recognizer]
//});

//console.log(JSON.stringify(intents));

//bot.dialog("whatever", function (session) {
//    session.send('localisation ok ok ok ok ');
//}).triggerAction({ matches: 'intents' });

//bot.dialog("ok", intents);
//intents.matches('Localisation', function (session, args) {
//    session.send("c'est exact")
//})


function parseCookies(cookiesString) {
    var list = {};

    cookiesString && cookiesString.split(';').forEach(function (c1) {
        c1 && c1.split(',').forEach(function (cookie) {
            var parts = cookie.split('=');
            list[parts.shift().trim()] = decodeURI(parts.join('='));
        });
    });

    return list;
}

function getEntityElement(message,session) {
    return new Promise((resolve, reject) => {
        var options = {
            method: 'GET',
            uri: LUIS_APP_URL + message,
            json: true
        };
        request(options, function (error, response, body) {
            if (!error && response.statusCode == 200) {
                console.log("constate mon body: " + JSON.stringify(body));
                console.log("body.entities[0]" + body.entities[0]);
                console.log("body.entities[0].resolution" + body.entities[0].resolution);
                console.log("body.entities[0].resolution.values[0]" + body.entities[0].resolution.values[0]);
                console.log("body.entities[0] stringifyis√©" + JSON.stringify(body.entities[0]));
                console.log("body.entities[0].resolution stringifyis√©" + JSON.stringify(body.entities[0].resolution));
                console.log("body.entities[0].resolution.values[0] stringifyis√©" + JSON.stringify(body.entities[0].resolution.values[0]));
                session.userData.produit = JSON.stringify(body.entities[0].resolution.values[0]);
                resolve();
                
                
            }
            else {
                console.log('erreur recuperation element');

            }
        })
    })
};

function getRecette(token, produit,session) {
    console.log("Debut getRecette");
    console.log('le produit qu\'on utilise: ' + produit);
    console.log('token qu\'on utilise: ' + token);
    var options = {
        method: 'GET',
        uri: URL_MCO + "/api/v1/recherche/recette?mot=" + produit,
        headers: {
            TokenAuthentification: token, 
        },
        json: true
    };
    request(options, function (error, response, body) {
        if (!error && response.statusCode == 200) {
            var msg = new builder.Message(session);
            msg.attachmentLayout(builder.AttachmentLayout.carousel)
            var myCardArray = [];
            const limit = Math.min(10, body.Recettes.length);
            for (var i = 0; i < limit; i++) {
                var ingredientList = "";
                for (var j = 0; j < body.Recettes[i].IngredientsPrincipaux.length; j++) {
                    ingredientList += body.Recettes[i].IngredientsPrincipaux[j] + ", ";
                };
                console.log('liste des ingredients' + ingredientList);
                const url = "https://drive.intermarche.com/1-nantes-leraudiere/recette/" + body.Recettes[i].IdRecette + "-recette"; //TODO Choisir le bon magasin quand authentification
                myCardArray.push(
                    new builder.HeroCard(session)
                        .title(body.Recettes[i].Titre)
                        .subtitle(ingredientList)
                        .images([builder.CardImage.create(session, body.Recettes[i].ImageUrl)])
                        .buttons([
                            builder.CardAction.openUrl(session, url, "+ d'infos")
                        ])
                )
            }
            msg.attachments(myCardArray);
            session.send(msg).endDialog();
        }
        else {
            console.log("erreur recherche recette");
            session.send("Je suis d√©sol√© mais je n'ai pas trouv√© de recette correspondant √† ta recherche üòî ")
        }
    })
}

function getIdrc(email, mdp, session) {
    return new Promise((resolve, reject) => {
        var options = {
            method: 'POST',
            uri: URL_RC + "ReferentielClient/v1/login",
            body: {
                email: email,
                mdp: mdp
            },
            headers: {
                "Msq-Jeton-App": MSQ_JETON_APP_RC,
                "Msq-App": MSQ_APP_RC
            },
            json: true
        };

        request(options, function (error, response, body) {
            console.log('ok');
            console.log("ceci est l'id apres login RC: " + body.id);
            session.userData.idrc = body.id;
            resolve();            
            console.log("termin√© l'idrc");
        }, (error, response) => {
            if (error) {
                console.log("erreur pendant la recuperation de l'idrc");
                reject(error);
            }
            else if (response.body.error) {
                console.error('Error: ', response.body.error);
                reject(new Error(response.body.error));
            }
            
        });
    })
}

function getToken(email, mdp, idrc, session) {
    console.log("nous sommes dans le getToken");
    console.log("voici l'idrc dans le getToken: " + idrc);
    var options = {
        url: URL_MCO + '/api/v1/loginRc',
        method: 'POST',
        body: {
            email: email,
            motdepasse: mdp,
            idrc: idrc,
            veutcartefid: false
        },
        json: true,
        
    };
    console.log("options est defini au calme: " + JSON.stringify(options));

    request(options, function (error, response, body) {
        if (!error && response.statusCode == 200) {
            console.log('ok');
            console.log("Ceci estle token qu'on choppe: " + body.TokenAuthentification);
            session.userData.TokenAuthentification = body.TokenAuthentification;
            session.save();
        }
        else {
            console.log("erreur r√©cuperation Token");
        }
    })
}

function getSessionId(email, mdp,session) {
    var options = {
        method: 'POST',
        uri: FO_URL + "Connexion",
        body: {
            txtEmail:email,
            txtMotDePasse: mdp,
            largeur: "800",
            hauteur: "300",
            resteConnecte: true,
        },
        json: true,
        headers: {
            referer: 'http://google.fr'
        }
    };

    request(options, (error, response) => {
        if (!error && response.statusCode == 200) {
            console.log("getAspNetSessionId retourne : " + response.headers['set-cookie']);
            var c = parseCookies(response.headers['set-cookie'].toString());
            console.log("MYCOOOKIIIEEES: " + parseCookies(response.headers['set-cookie'].toString()));
            parseCookies(response.headers['set-cookie'].toString());
            session.userData.sessionID = c["ASP.NET_SessionId"];
            console.log("Le ASPSESSIONID est : " + session.userData.sessionID);
        }
    })

    var cookieSession = 'ASP.NET_SessionId=' + session.userData.sessionID;
    //HitFO sinon √ßa marche pas.
    request({
        url: FO_URL,
        method: 'GET',
        headers: {
            'cookie': cookieSession
        }
    })
}
bot.dialog('login', [//TODO enlever cette deuxi√®me carte qui apparait pour rien
    function (session) {
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [
                                {
                                    "type": "TextBlock",
                                    "text": "Connexion",
                                    "weight": "bolder",
                                    "size": "medium"
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "Ton e-mail :",
                                    "wrap": true
                                },
                                {
                                    "type": "Input.Text",
                                    "id": "email",
                                    "placeholder": "moi@exemple.com"
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "Ton mot de passe :",
                                    "wrap": true
                                },
                                {
                                    "type": "Input.Text",
                                    "id": "mdp",
                                    "placeholder": "‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.Submit",
                    "title": "En avant!",
                    "data": {
                        'type': 'identifiants'

                    }
                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
        if (session.message && session.message.value) {
            // A Card's Submit Action obj was received
            console.log("ceci est inchallah la data utilisateur: " + JSON.stringify(session.message.value));

            session.userData.email = session.message.value.email;//on stocke dans userData car cela nous permet de stocker meme en dehors de ce dialogue et ce m√™me si on demande d'autres inputs'
            session.userData.mdp = session.message.value.mdp;
            console.log("email: " + session.userData.email);
            console.log("Mot de passe: " + session.userData.mdp);
            getIdrc(session.userData.email, session.userData.mdp, session)
                .then(() => console.log("voyons voir si l'idrc est accessible en dehors de la fonction getidrc: " + session.userData.idrc))
                .then(() => getToken(session.userData.email, session.userData.mdp, session.userData.idrc, session))
                .then(() => getSessionId(session.userData.email, session.userData.mdp, session))
                .then(() => session.send("Vous √™tes bien connect√©"))
            
        }
    },
    function (session, results) {
        //recuperation idrc ,token, aspnetsession
        session.userData.mdp = results.response;
        console.log("email: " + session.userData.email);
        console.log("Mot de passe: " + session.userData.mdp);
        getIdrc(session.userData.email, session.userData.mdp, session)
            .then(() => console.log("voyons voir si l'idrc est accessible en dehors de la fonction getidrc: " + session.userData.idrc))
            .then(() =>getToken(session.userData.email, session.userData.mdp, session.userData.idrc, session))
            .then(() =>getSessionId(session.userData.email, session.userData.mdp,session))
            .then(() => session.send("Vous √™tes bien connect√©"))

        session.endDialog();

    }


]).triggerAction({
    matches: /^login$/i,
});

bot.dialog('getproduit', [ //TODO le faire marcher  
    function (session) {
        session.send('Je traite ta demande et je reviens vers toi le plus vite possible');    
        var produit = builder.EntityRecognizer.findEntity(args.entities, 'foodName');
        session.userData.produit = results.response;
        console.log('${session.userData.produit}');
        console.log(session.userData.produit);
        var options = {
            method: 'POST',
            uri: FO_URL + "RechercheJs",
            headers: {
                cookie: session.userData.sessionID, 
            },
            body: {
                mot: session.userData.produit
            },
            json: true
        };
        request(options, function (error, response, body) {
            if (!error && response.statusCode == 200) {
                console.log('ok');
                var msg = new builder.Message(session);
                msg.attachmentLayout(builder.AttachmentLayout.carousel)
                var myCardArray = [];
                const limit = Math.min(10, body.length);
                for (var i = 0; i < limit; i++) {
                    myCardArray.push(
                        new builder.HeroCard(session)
                            .title(body[i].Libelle)
                            .text(body[i].Prix + ' (' + body[i].Conditionnement + ')')
                            .subtitle(body[i].PrixParQuantite)                            
                            .images([builder.CardImage.create(session, body[i].NomImage)])
                            .buttons([
                                builder.CardAction.imBack(session, "Ajouter au panier", "Ajouter au panier")
                            ])
                    )
                }
                msg.attachments(myCardArray);                
                session.send(msg).endDialog();
            }
        })
  
        
    }
]).triggerAction({
    matches: /^courses$/i,
    });


bot.dialog('getrecette', [
    function (session) {
        session.send('Je traite ta demande et je reviens vers toi d√®s que j\'ai trouv√© la recette parfaite');
        var userMessage = session.message.text;
        getEntityElement(userMessage,session)
            .then(() => getRecette(session.userData.TokenAuthentification, session.userData.produit,session))
    }
]).triggerAction({
    matches: 'Recherche Recette'/*/^recettes$/i*/,
});


//<<<<<<<<<<<<<<<<<<<<<<FAQ>>>>>>>>>>>>>>>>>>>>>>>>>>>

bot.dialog('ajoutExpress', [
    function (session) {
        session.sendTyping();
        let msg = {
            "type": "message",
            "text": "Tu es press√© ? L‚ÄôAjout Express te permet d‚Äôajouter des produits √† ton panier en seulement quelques clics. Rien de plus simple, s√©lectionne cette option lorsque tu es dans ton panier sur le site de courses en ligne.En cliquant sur le bouton ci- dessous, tu accedes directement aux rayons puis aux sous-familles.Tu n‚Äôas plus qu‚Äô√† compl√©ter ton panier.",
            "attachments": [
                {
                    "contentType": "image/png",
                    "contentUrl": "https://img4.hostingpics.net/pics/782644Capture.png",
                    "name": "Ajout Express"
                }
            ],

        };
        session.send(msg);

    }
]).triggerAction({
    matches: 'FAQ.Ajout.Express',
    });

bot.dialog('listeCourses', [
    function (session) {
        session.sendTyping();
        session.send("La liste de courses procure un gain de temps consid√©rable. Elle te donne la possibilit√© par un simple clic de d√©poser dans ton panier les articles que tu commandes r√©guli√®rement.Pour que tes prochaines commandes soient plus rapides, tu peux cr√©er des listes th√©matiques. Remplis ton panier avec les articles d√©sir√©s, clique ensuite sur ¬´ Aller en caisse ¬ª, puis clique sur le lien ¬´ Tout ajouter √† une liste ¬ª. Donne un nom √† ta liste et le tour est jou√© ! Ta liste de courses est enregistr√©e, tu pourras la r√©utiliser lors de ta prochaine visite sur notre site.");
    }
]).triggerAction({
    matches: 'FAQ.Liste.Courses',
    });

bot.dialog('consulterListeCourses', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
                "version": "1.0",
                    "body": [
                        {
                            "type": "ColumnSet",
                            "columns": [
                                {
                                    "type": "Column",
                                    "width": 2,
                                    "items": [

                                        {
                                            "type": "TextBlock",
                                            "text": "Pour consulter ta liste de courses, tu dois √™tre connect√© √† ton compte. Tu pourras alors consulter ta liste de courses directement en cliquant ci-dessous. Si tu veux te connecter, tu peux le faire ici en tapant \"login\" ", "wrap": true
                                        }
                                    ]
                                }
                            ]
                        }
                    ],
                        "actions": [
                            {
                                "type": "Action.OpenUrl",
                                "url": "/mon-compte/mes-listes-de-courses",
                                "title": "Par ici!"

                            }
                        ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }
]).triggerAction({
    matches: 'FAQ.Consulter.Liste.Courses',
});

bot.dialog('ancienneCommande', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Il faut que tu te rendes dans ton compte. Tu peux y acceder en cliquant sur le lien ci-dessous üòÅ. Dans ¬´ Historique de mes commandes ¬ª, s√©lectionne la commande concern√©e et clique sur ¬´ Transformer en liste ¬ª.", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mes-commandes",
                    "title": "Mon compte"

                }
            ]
        }

        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }
]).triggerAction({
    matches: 'FAQ.Ancienne.Commande',
});

bot.dialog('produitFavori', [
    function (session) {
        session.sendTyping();
        session.send("Tu peux ajouter un produit dans tes favoris en cliquant sur le coeur situ√© √† cot√© de ce dernier. Tu pourras le retrouver ensuite dans l‚Äôonglet ¬´ Mon Drive malin ¬ª.");
    }
]).triggerAction({
    matches: 'FAQ.Produit.Favori',
    });

bot.dialog('oubliMdp', [
    function (session) {
        session.sendTyping();
        session.send("Lors de ta connexion sur le site, clique sur ¬´ J‚Äôai oubli√© mon mot de passe ¬ª. Tu recevra un email avec un lien sur lequel il faudra cliquer pour pouvoir renseigner un nouveau mot de passe. Pense √† v√©rifier tes courriers ind√©sirables si tu n‚Äôas pas re√ßu l‚Äôemail apr√®s quelques minutes üòâ.");        
    }

]).triggerAction({
    matches: 'FAQ.Oubli.Mdp',
});

bot.dialog('suppressionCompte', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Tu peux √† tout moment supprimer ton compte en cliquant sur le bouton ci-dessous. Conform√©memt √† la loi \"Informatique et Libert√©\" (art 38, 39 & 40 de la loi Informatiques et Libert√©s modifi√©e du 6 juillet 1978), tu disposes d'un droit d'acc√®s, de modification, de rectification et de suppression des donn√©es te concernant. Tu peux exercer ce droit en nous contactant par email √† l'adresse suivante: intermarche@mousquetaires.com", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mon-profil",
                    "title": "Mon compte"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Suppression.Compte',
    });

bot.dialog('changementMagasin', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Si tu souhaites passer commande dans un autre magasin, je t'invite √† cliquer sur le bouton ci-dessous. Dans \"Mes magasins\", clique sur \"changer de magasin\" puis entre le code postal du magasin sur lequel tu veux passer commande", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mes-magasins",
                    "title": "Mes magasins"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Changement.Magasin',
    });

bot.dialog('newsletter', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Tu peux √† tout moment modifier tes abonnements pour recevoir ou non nos communications par email, par SMS ou par voie postale en cliquant sur le bouton ci-dessous", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mon-profil",
                    "title": "Mon compte"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Newsletter',
    });

bot.dialog('confirmationCommande', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Si ta commande a bien √©t√© prise en compte, tu vas recevoir un email de confirmation de commande. Tu peux √©galement te rendre dans ton compte dans la rubrique ¬´ Mes commandes en cours ¬ª en cliquant ci-dessous", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mes-commandes",
                    "title": "Mes commandes"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Confirmation.Commande',
    });

bot.dialog('changementHoraire', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Si tu souhaites modifier ton horaire de livraison ou de retrait, rend-toi dans ton compte en cliquant sur le bouton ci-dessous. Dans \"Mes commandes en cours\", s√©lectionne la commande que tu souhaites modifier. Si ta commande est en statut \"en pr√©paration\" il est malheuresement dej√† trop tard pour la modifier üòï.", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/mes-commandes",
                    "title": "Mes commandes"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Changement.Horaire',
});

bot.dialog('produitManquant', [
    function (session) {
        session.sendTyping();
        session.send("En cas de produits manquants lors de ta livraison, ton livreur t'en informera et ceux-ci ne te seront pas factur√©s.");
    }

]).triggerAction({
    matches: 'FAQ.Produit.Manquant',
});

bot.dialog('delaiLivraison', [
    function (session) {
        session.sendTyping();
        session.send("Le d√©lai de livraison d√©pend du planning propos√© par ton Intermarch√© et du cr√©neau horaire que tu auras choisi.");
    }

]).triggerAction({
    matches: 'FAQ.Delai.Livraison',
});

bot.dialog('produitIntrouvable', [
    function (session) {
        session.sendTyping();
        session.send("Si tu souhaites commander un produit mais que celui-ci n'appara√Æt pas, il est fort probable qu'il ne soit plus disponible. N'h√©site pas √† revenir r√©guli√®rement sur notre site, des r√©approvisionnements sont r√©alis√©s fr√©quemment.");
    }

]).triggerAction({
    matches: 'FAQ.Produit.Introuvable',
});

bot.dialog('produitsFrais', [
    function (session) {
        session.sendTyping();
        session.send("Nos v√©hicules de livraison sont r√©frig√©r√©s. Ce mode de livraison permet de conserver tous les types de produits (surgel√©s, frais‚Ä¶) du magasin √† ton domicile. \n Si tu choisis le mode Drive, tes produits frais et surgel√©s sont conserv√©s √† la bonne temp√©rature jusqu‚Äôau retrait");
    }

]).triggerAction({
    matches: 'FAQ.Produits.Frais',
});

bot.dialog('produitTrad', [
    function (session) {
        session.sendTyping();
        session.send("Sur notre site de courses en ligne, tu peux commander des produits √† la coupe comme si tu √©tais au rayon boucherie, poissonnerie, ou encore fromagerie de ton magasin. De m√™me, de nombreux fruits et l√©gumes te sont propos√©s. \n Dans ton panier, tu peux ajouter des commentaires sur tes produits dans la rubrique ¬´ Commentaires pour le livreur ¬ª pour aider ton pr√©parateur √† r√©pondre au mieux √† tes attentes. Exemple : ¬´ Je souhaite des bananes tr√®s m√ªres ¬ª, ¬´ Je pr√©f√®re des tranches de jambon tr√®s fines ¬ª‚Ä¶");
    }

]).triggerAction({
    matches: 'FAQ.Produit.Trad',
    });

bot.dialog('differencePrix', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Les prix sur le site drive.intermarche.com sont les m√™mes que les prix en magasin. Si tu constates une diff√©rence de prix entre le site et ton point de vente tu peux nous en informer en appelant le numero ci-dessous", "wrap": true
                                },
                                {
                                    "type": "Image",
                                    "url": "https://driveimg1.intermarche.com/fr/Content/images/compte/BannieresSAV.jpg",
                                    "size": "stretch"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
        
    }

]).triggerAction({
    matches: 'FAQ.Difference.Prix',
});

bot.dialog('modePaiement', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Plusieurs modes de paiement sont disponibles selon le mode de livraison choisi ainsi que le magasin s√©lectionn√© :", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-Pour la livraison, aupr√®s de ton livreur et ce par ch√®que ou carte bancaire*.", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-Pour le retrait, tu peux payer soit pas carte bancaire soit par ch√®que aupr√®s du personnel du magasin*", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-Sur notre site, tu peux payer ta commande directement en ligne par carte bancaire*.", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-Enfin, pour les commandes Drive, tu pourras payer directement √† la borne*.", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": " ", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "*Voir conditions avec ton magasin", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Modes.Paiement',
    });

bot.dialog('montantMinimum', [
    function (session) {
        session.sendTyping();
        session.send("Pour conna√Ætre le montant minimum d‚Äôachat propos√© par votre magasin, rendez - vous sur la page d‚Äôaccueil au niveau du logo (en haut √† gauche), cliquez sur le nom de votre magasin puis allez sur ¬´ Voir les plannings ¬ª.");
    }
]).triggerAction({
    matches: 'FAQ.Montant.Minimum',
    });

bot.dialog('securit√©Transactions', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "A chaque √©tape, ton paiement en ligne est 100% s√©curis√©! Aucune information ne transite en clair sur le site : le serveur est en mode crypt√© et toutes les informations sont cod√©es. Le fait de communiquer ton num√©ro de carte de cr√©dit sur le serveur bancaire au moment du paiement de ta commande est enti√®rement s√©curis√©.", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "Par ailleurs, tu remarqueras dans ton navigateur internet une adresse commen√ßant par https:// ainsi qu‚Äôun cadenas. Intermarch√© n‚Äôa jamais acc√®s √† tes coordonn√©es et ne les conserve en aucun cas sur ses serveurs.", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.S√©curit√©.Transactions',
});

bot.dialog('refusPaiement', [
    function (session) {
        session.sendTyping();
        session.send("Si ton paiement est refus√©, pas de panique, ton Intermarch√© te contactera afin de trouver une solution üòâ.");
    }
]).triggerAction({
    matches: 'FAQ.Refus.Paiement',
    });

bot.dialog('debitCommande', [
    function (session) {
        session.sendTyping();
        session.send("Pour le r√®glement par carte de cr√©dit en ligne, le d√©bit est effectu√© lors de la livraison de la commande √† la condition d‚Äôavoir obtenu pr√©alablement l‚Äôautorisation de d√©bit de ton compte aupr√®s des centres de paiement comp√©tents, faute de quoi, ta commande ne pourra √™tre prise en compte.");
    }
]).triggerAction({
    matches: 'FAQ.Debit.Commande',
    });

bot.dialog('demandeCarte', [
    function (session) {
        session.sendTyping();
        var card = {
            "type": "AdaptiveCard",
            "version": "1.0",
            "body": [
                {
                    "type": "ColumnSet",
                    "columns": [
                        {
                            "type": "Column",
                            "width": 2,
                            "items": [

                                {
                                    "type": "TextBlock",
                                    "text": "Pour b√©n√©ficier des avantages li√©s au programme, il faut adh√©rer au programme de fid√©lit√© Intermarch√©", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "Tu peux obtenir ta carte gratuitement soit: ", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-En te rendant √† l'accueil de ton magasin", "wrap": true
                                },
                                {
                                    "type": "TextBlock",
                                    "text": "-En faisant la demande dans ton espace client en cliquant sur le bouton ci-dessous", "wrap": true
                                }
                            ]
                        }
                    ]
                }
            ],
            "actions": [
                {
                    "type": "Action.OpenUrl",
                    "url": "/mon-compte/ma-carte-intermarche",
                    "title": "Ma carte fidelit√©"

                }
            ]
        }
        session.send(new builder.Message(session).addAttachment({
            contentType: "application/vnd.microsoft.card.adaptive",
            content: card
        }));
    }

]).triggerAction({
    matches: 'FAQ.Demande.Carte',
});






